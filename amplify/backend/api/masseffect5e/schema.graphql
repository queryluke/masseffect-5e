# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

type Bookmark @model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"}, subscriptions: null)
@auth(rules: [
  { allow: owner }
]){
  id: ID!
  owner: ID! @index(name: "byUser", queryField: "bookmarkByUser")
  model: String!
  modelId: String!
  data: String
}

type Profile @model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"}, subscriptions: null)
@auth(rules: [
  { allow: owner }
]) {
  id: ID!
  username: String
  profileImg: String
  imperial: Boolean!
  darkMode: Boolean!
  maxCharacters: Int
}

type Character @model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"}, subscriptions: null)
@auth(rules: [
  { allow: private, operations: [read] }
  { allow: owner },
  { allow: public, provider: apiKey, operations: [read] }
]){
  id: ID!
  owner: ID! @index(name: "byUser", queryField: "characterByUser")
  data: String
}

type Homebrew
@model
@auth(rules: [
  { allow: private, operations: [read] },
  { allow: owner }
]) {
  id: ID!
  owner: ID! @index(name: "byUser", queryField: "homebrewByUser")
  title: String!
  titleId: String! @index(name: "byTitleId", queryField: "homebrewByTitleId")
  data: AWSJSON!
  model: String! @index(name: "byModel", queryField: "homebrewByModelByStatus", sortKeyFields: ["publicationStatus"])
  usageCount: Int @default(value: "0")
  voteCount: Int @default(value: "0")
  publicationStatus: String! @index(name: "byPublicationStatus", queryField: "homebrewSearch", sortKeyFields: ["model", "title", "createdAt", "usageCount", "voteCount"])
  createdAt: AWSDateTime!
}

type HomebrewUse
@model
@auth(rules: [
  { allow: owner }
]) {
  id: ID!
  owner: ID! @index(name: "byUser", queryField: "homebrewUseByUser")
  homebrewId: ID!
  homebrew: Homebrew @hasOne(fields: ["homebrewId"])
}

type HomebrewVote
@model
@auth(rules: [
  { allow: owner }
]) {
  id: ID!
  owner: ID! @index(name: "byUser", queryField: "homebrewVoteByUserByHomebrew", sortKeyFields: ["homebrewId"])
  homebrewId: ID!
}

type Subscription {
  onCreateBookmarkByUserId(userId: ID!): Bookmark
    @aws_subscribe(mutations: ["createBookmark"])
  onDeleteBookmarkByUserId(userId: ID!): Bookmark
    @aws_subscribe(mutations: ["deleteBookmark"])
}
